knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(ggpmisc)
library(lubridate)
library(ggridges)
dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dir)
df <- read_delim('source\madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim('\source\madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim('madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim('source\madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim(file='source\madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim(file='source\madrid_transactions.csv', delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim(file="source\madrid_transactions.csv", delim = ',', locale = locale(decimal_mark = '.'))
df <- read_delim(file="source/madrid_transactions.csv", delim = ',', locale = locale(decimal_mark = '.'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(ggpmisc)
library(lubridate)
library(ggridges)
dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dir)
df <- read_delim(file="source/madrid_transactions.csv", delim = ',', locale = locale(decimal_mark = '.'))
df
skim(df)
table(lapply(df['tx_date_proc'], function(x) format(x, "%Y-%m-%d")))
# Correlation
# http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software
library("PerformanceAnalytics")
my_data <- df %>%
mutate_if(is.character, function(x) as.numeric(as.factor(x))) %>%
select(-tx_date_proc)
chart.Correlation(my_data, histogram=TRUE, pch=19)
# Data pre processing
df_top <- df %>%
group_by(`customer_country`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_customer_country=ifelse(`customer_country` %in% df_top[['customer_country']], `customer_country`, 'Other')) %>%
mutate(top_customer_country=factor(top_customer_country, levels=c(df_top[['customer_country']], 'Other')))
mu <- df_grouped %>%
group_by(top_customer_country) %>%
summarise(grp.mean=mean(amount))
# Change line colors by groups
ggplot(df_grouped, aes(x=amount, color=top_customer_country, fill=top_customer_country)) +
# geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=0.1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=top_customer_country), linetype="dashed")+
labs(title="Amount per country",x="Amount in log scale", y = "Density")+
theme_classic() +
scale_x_log10()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(ggpmisc)
library(lubridate)
library(ggridges)
dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dir)
df <- read_delim(file="source/madrid_transactions.csv", delim = ',', locale = locale(decimal_mark = '.'))
df
skim(df)
table(lapply(df['tx_date_proc'], function(x) format(x, "%Y-%m-%d")))
# Correlation
# http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software
library("PerformanceAnalytics")
my_data <- df %>%
mutate_if(is.character, function(x) as.numeric(as.factor(x))) %>%
select(-tx_date_proc)
chart.Correlation(my_data, histogram=TRUE, pch=19)
# Data pre processing
df_top <- df %>%
group_by(`customer_country`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_customer_country=ifelse(`customer_country` %in% df_top[['customer_country']], `customer_country`, 'Other')) %>%
mutate(top_customer_country=factor(top_customer_country, levels=c(df_top[['customer_country']], 'Other')))
mu <- df_grouped %>%
group_by(top_customer_country) %>%
summarise(grp.mean=mean(amount))
# Change line colors by groups
ggplot(df_grouped, aes(x=amount, color=top_customer_country, fill=top_customer_country)) +
# geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=0.1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=top_customer_country), linetype="dashed")+
labs(title="Amount per country",x="Amount in log scale", y = "Density")+
theme_classic() +
scale_x_log10()
ggplot(df_grouped, aes(x=amount, y=top_customer_country, fill=top_customer_country)) +
geom_boxplot() +
scale_x_log10()
# Data pre processing
df_top <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_=ifelse(`category` %in% df_top[['category']], `category`, 'Other')) %>%
mutate(top_=factor(top_, levels=c(df_top[['category']], 'Other')))
# filter(customer_country=='US')
mu <- df_grouped %>%
group_by(top_) %>%
summarise(grp.mean=mean(amount))
# Change line colors by groups
ggplot(df_grouped, aes(x=amount, color=top_, fill=top_)) +
# geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=0.1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=top_), linetype="dashed")+
labs(title="Amount per category",x="Amount", y = "Density") +
scale_x_log10()
df_top_category <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_top_country <- df %>%
group_by(`customer_country`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_category=ifelse(`category` %in% df_top_category[['category']], `category`, 'Other')) %>%
mutate(top_category=factor(top_category, levels=c(df_top_category[['category']], 'Other'))) %>%
mutate(top_country=ifelse(`customer_country` %in% df_top_country[['customer_country']], `customer_country`, 'Other')) %>%
mutate(top_country=factor(top_country, levels=c(df_top_country[['customer_country']], 'Other')))
mu <- df_grouped %>%
group_by(top_category) %>%
summarise(grp.mean=mean(amount))
ggplot(df_grouped, aes(x=amount, color=top_category, fill=top_category)) +
facet_wrap(vars(top_country)) +
geom_density(alpha=0.1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=top_category), linetype="dashed")+
labs(title="Amount per category",x="Amount", y = "Density") +
coord_cartesian(xlim = c(0, 200), ylim = c(0, 0.02)) +
scale_color_discrete(name = "Category") +
scale_fill_discrete(name = "Category")
df_top_category <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_top_country <- df %>%
group_by(`customer_country`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_category=ifelse(`category` %in% df_top_category[['category']], `category`, 'Other')) %>%
mutate(top_category=factor(top_category, levels=c(df_top_category[['category']], 'Other'))) %>%
mutate(top_country=ifelse(`customer_country` %in% df_top_country[['customer_country']], `customer_country`, 'Other')) %>%
mutate(top_country=factor(top_country, levels=c(df_top_country[['customer_country']], 'Other')))
mu <- df_grouped %>%
group_by(top_country) %>%
summarise(grp.mean=mean(amount))
ggplot(df_grouped, aes(x=amount, color=top_country, fill=top_country)) +
facet_wrap(vars(top_category)) +
geom_density(alpha=0.1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=top_country), linetype="dashed")+
labs(title="Amount per category",x="Amount", y = "Density") +
coord_cartesian(xlim = c(0, 200), ylim = c(0, 0.02)) +
scale_color_discrete(name = "Country") +
scale_fill_discrete(name = "Country")
# Data pre processing
df_top <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_=ifelse(`category` %in% df_top[['category']], `category`, 'Other')) %>%
mutate(top_=factor(top_, levels=c(df_top[['category']], 'Other'))) %>%
group_by(hour, top_) %>%
summarise(total_amount=mean(amount))
# Change line colors by groups
ggplot(df_grouped, aes(x=hour, y=total_amount, color=top_)) +
geom_line() +
labs(title="Amount per category",x="Hour", y = "Average amount")
# Data pre processing
df_top <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_=ifelse(`category` %in% df_top[['category']], `category`, 'Other')) %>%
mutate(top_=factor(top_, levels=c(df_top[['category']], 'Other'))) %>%
group_by(hour, top_) %>%
summarise(n=n())
# Change line colors by groups
ggplot(df_grouped, aes(x=hour, y=n, color=top_)) +
geom_line() +
labs(title="Total number of transactions per hour",x="Hour", y = "Number of transactions") +
scale_color_discrete(name = "Category")
# Data pre processing
df_top <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
daytime_sorted <- df %>%
group_by(`daytime`) %>%
summarise(hour=mean(`hour`)) %>%
arrange((hour)) %>%
.[['daytime']]
df_grouped <- df %>%
mutate(top_=ifelse(`category` %in% df_top[['category']], `category`, 'Other')) %>%
mutate(top_=factor(top_, levels=c(df_top[['category']], 'Other'))) %>%
mutate(daytime=factor(daytime, levels=daytime_sorted)) %>%
group_by(`daytime`, top_) %>%
summarise(n=n())
# Change line colors by groups
ggplot(df_grouped, aes(x=`daytime`, y=n, color=top_, group=top_)) +
geom_point(stat='summary') +
stat_summary(fun.y=sum, geom="line")
labs(title="Total number of transactions per daytime", x="Weekday", y = "Number of transactions") +
scale_color_discrete(name = "Category")
# https://rpubs.com/Lluis_Ramon/Prestantacion_ggplot2_ggmap
# https://www.datanovia.com/en/blog/how-to-create-a-map-using-ggplot2/
library(maptools)
library(maps)
data(wrld_simpl)
world_ggmap <- fortify(wrld_simpl, region = "ISO2")
df_grouped <- df %>%
group_by(`customer_country`) %>%
summarise(n=n()) %>%
mutate(row=row_number())
df_top_country <- df %>%
group_by(`customer_country`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total)) %>%
.[['customer_country']]
world_ggmap_mean <- world_ggmap %>%
group_by(id) %>%
summarise(long = mean(long), lat = mean(lat)) %>%
filter(id %in% df_top_country)
ggplot(df_grouped) +
geom_map(aes(map_id = customer_country, fill = row), map = world_ggmap) +
expand_limits(x = world_ggmap$long, y = world_ggmap$lat) +
geom_text(aes(x=long, y=lat, label = id), data=world_ggmap_mean, size = 3, hjust = 0.5, color='red')+
scale_fill_viridis_c()+
theme_void()+
theme(legend.position = "none")
df_top <- df %>%
group_by(`category`) %>%
summarise(Total=sum(`amount`)) %>%
top_n(5, Total) %>%
arrange(desc(Total))
df_grouped <- df %>%
mutate(top_=ifelse(`category` %in% df_top[['category']], `category`, 'Other')) %>%
mutate(top_=factor(top_, levels=c(df_top[['category']], 'Other')))
ggplot(df_grouped, aes(x=tx_date_proc, y=amount)) +
geom_smooth() +
facet_wrap(vars(top_))
df_grouped <- df %>%
mutate(day_hour_=floor_date(tx_date_proc, "hour"))
# group_by(day_hour_, category) %>%
# summarise(mean_=log10(mean(amount)))
ggplot(df_grouped, aes(x=log10(amount))) +
facet_wrap(vars(category)) +
geom_density(alpha=0.1)+
coord_cartesian(xlim = c(-1, 4), ylim = c(0, 1)) +
scale_color_discrete(name = "Category") +
scale_fill_discrete(name = "Category")
# labs(title="Amount per category",x="Amount", y = "Density") +
df_grouped <- df %>%
mutate(day_hour_=floor_date(tx_date_proc, "hour"))
ggplot(df_grouped, aes(x=day_hour_)) +
facet_wrap(vars(category)) +
geom_density(alpha=0.1) +
theme(axis.text.x=element_text(angle=90, hjust=1))
# https://public.tableau.com/en-us/gallery/evolution-global-temperature
df_mod <- df %>%
mutate(day_hour_=floor_date(tx_date_proc, "hour"),
minute_=minute(tx_date_proc)) %>%
group_by(day_hour_, minute_, category) %>%
summarise(mean_=log10(mean(amount)))
gg <- ggplot(df_mod) +
geom_raster(aes(x=day_hour_, y=minute_, fill = mean_), hjust=0.5, vjust=0.5, interpolate=FALSE) +
facet_wrap(vars(category)) +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90, hjust=1))
gg
# https://www.tylermw.com/3d-ggplots-with-rayshader/
# remotes::install_github("tylermorganwall/rayshader")
library(rayshader)
plot_gg(gg,multicore=TRUE,width=5,height=5,scale=250)
# http://www.sthda.com/english/articles/32-r-graphics-essentials/133-plot-one-variable-frequency-graph-density-distribution-and-more/
theme_set(theme_ridges())
df_mod <- df %>%
mutate(day_hour_=floor_date(tx_date_proc, "hour"),
minute_=factor(round(minute(tx_date_proc), -1)))
ggplot(df_mod) +
geom_density_ridges_gradient(aes(x=day_hour_, y=minute_, fill=..x..), scale = 3, size = 0.3) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
facet_wrap(vars(category)) +
theme(legend.position = "none")
# http://www.sthda.com/english/articles/32-r-graphics-essentials/133-plot-one-variable-frequency-graph-density-distribution-and-more/
# https://stackoverflow.com/questions/25985159/r-how-to-3d-density-plot-with-gplot-and-geom-density
theme_set(theme_ridges())
ggplot(df) +
geom_density_ridges_gradient(aes(x=tx_date_proc, y=category, fill=..x..), scale = 3, size = 0.3) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
theme(legend.position = "none")
